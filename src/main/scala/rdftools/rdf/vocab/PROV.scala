/*
 * Copyright 2017 Jean-Paul Calbimonte
 *
 * SPDX-License-Identifier: MIT
 */

package rdftools.rdf.vocab

import rdftools.rdf.Vocab

import rdftools.rdf._

import rdftools.rdf.RdfTools._

object PROV extends Vocab {
  override val iri: Iri = "http://www.w3.org/ns/prov#"
  val End = clazz("End")
  val EmptyDictionary = clazz("EmptyDictionary")
  val Contributor = clazz("Contributor")
  val Bundle = clazz("Bundle")
  val Association = clazz("Association")
  val Dictionary = clazz("Dictionary")
  val Activity = clazz("Activity")
  val EmptyCollection = clazz("EmptyCollection")
  val Organization = clazz("Organization")
  val Creator = clazz("Creator")
  val RightsAssignment = clazz("RightsAssignment")
  val Derivation = clazz("Derivation")
  val AgentInfluence = clazz("AgentInfluence")
  val Location = clazz("Location")
  val Revision = clazz("Revision")
  val Start = clazz("Start")
  val Person = clazz("Person")
  val Accept = clazz("Accept")
  val Submit = clazz("Submit")
  val Insertion = clazz("Insertion")
  val Replace = clazz("Replace")
  val Agent = clazz("Agent")
  val Communication = clazz("Communication")
  val ServiceDescription = clazz("ServiceDescription")
  val Publish = clazz("Publish")
  val Generation = clazz("Generation")
  val Create = clazz("Create")
  val PrimarySource = clazz("PrimarySource")
  val Usage = clazz("Usage")
  val Role = clazz("Role")
  val Plan = clazz("Plan")
  val Quotation = clazz("Quotation")
  val DirectQueryService = clazz("DirectQueryService")
  val Contribute = clazz("Contribute")
  val Invalidation = clazz("Invalidation")
  val Delegation = clazz("Delegation")
  val InstantaneousEvent = clazz("InstantaneousEvent")
  val Attribution = clazz("Attribution")
  val RightsHolder = clazz("RightsHolder")
  val KeyEntityPair = clazz("KeyEntityPair")
  val Removal = clazz("Removal")
  val Influence = clazz("Influence")
  val SoftwareAgent = clazz("SoftwareAgent")
  val Copyright = clazz("Copyright")
  val EntityInfluence = clazz("EntityInfluence")
  val Collection = clazz("Collection")
  val Publisher = clazz("Publisher")
  val Entity = clazz("Entity")
  val Modify = clazz("Modify")
  val ActivityInfluence = clazz("ActivityInfluence")
  val qualifiedQuotation = prop("qualifiedQuotation")
  val generated = prop("generated")
  val qualifiedAssociation = prop("qualifiedAssociation")
  val has_anchor = prop("has_anchor")
  val qualifiedRemoval = prop("qualifiedRemoval")
  val invalidated = prop("invalidated")
  val atLocation = prop("atLocation")
  val dictionary = prop("dictionary")
  val hadRole = prop("hadRole")
  val influenced = prop("influenced")
  val wasInvalidatedBy = prop("wasInvalidatedBy")
  val mentionOf = prop("mentionOf")
  val hadGeneration = prop("hadGeneration")
  val asInBundle = prop("asInBundle")
  val hadUsage = prop("hadUsage")
  val qualifiedGeneration = prop("qualifiedGeneration")
  val wasStartedBy = prop("wasStartedBy")
  val qualifiedPrimarySource = prop("qualifiedPrimarySource")
  val describesService = prop("describesService")
  val specializationOf = prop("specializationOf")
  val hadDictionaryMember = prop("hadDictionaryMember")
  val derivedByInsertionFrom = prop("derivedByInsertionFrom")
  val entity = prop("entity")
  val qualifiedAttribution = prop("qualifiedAttribution")
  val influencer = prop("influencer")
  val alternateOf = prop("alternateOf")
  val qualifiedInsertion = prop("qualifiedInsertion")
  val pairEntity = prop("pairEntity")
  val activity = prop("activity")
  val used = prop("used")
  val hadPlan = prop("hadPlan")
  val has_provenance = prop("has_provenance")
  val wasQuotedFrom = prop("wasQuotedFrom")
  val wasAssociatedWith = prop("wasAssociatedWith")
  val qualifiedDelegation = prop("qualifiedDelegation")
  val insertedKeyEntityPair = prop("insertedKeyEntityPair")
  val wasInformedBy = prop("wasInformedBy")
  val qualifiedCommunication = prop("qualifiedCommunication")
  val qualifiedEnd = prop("qualifiedEnd")
  val has_query_service = prop("has_query_service")
  val wasEndedBy = prop("wasEndedBy")
  val wasGeneratedBy = prop("wasGeneratedBy")
  val hadPrimarySource = prop("hadPrimarySource")
  val derivedByRemovalFrom = prop("derivedByRemovalFrom")
  val qualifiedInvalidation = prop("qualifiedInvalidation")
  val hadActivity = prop("hadActivity")
  val qualifiedInfluence = prop("qualifiedInfluence")
  val qualifiedUsage = prop("qualifiedUsage")
  val wasDerivedFrom = prop("wasDerivedFrom")
  val qualifiedStart = prop("qualifiedStart")
  val wasAttributedTo = prop("wasAttributedTo")
  val qualifiedRevision = prop("qualifiedRevision")
  val actedOnBehalfOf = prop("actedOnBehalfOf")
  val pingback = prop("pingback")
  val wasInfluencedBy = prop("wasInfluencedBy")
  val wasRevisionOf = prop("wasRevisionOf")
  val hadMember = prop("hadMember")
  val agent = prop("agent")
  val qualifiedDerivation = prop("qualifiedDerivation")
  val removedKey = prop("removedKey")
  val pairKey = prop("pairKey")
  val provenanceUriTemplate = prop("provenanceUriTemplate")
  val value = prop("value")
  val startedAtTime = prop("startedAtTime")
  val invalidatedAtTime = prop("invalidatedAtTime")
  val generatedAtTime = prop("generatedAtTime")
  val endedAtTime = prop("endedAtTime")
  val atTime = prop("atTime")
}